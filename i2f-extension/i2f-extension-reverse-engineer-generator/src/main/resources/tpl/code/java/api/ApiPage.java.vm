#filename api/ApiPage
        package ${code.pkg}.api;

    #if(${code.lombok})
    import lombok.Data;
    import lombok.NoArgsConstructor;
    #end

import java.util.List;

/**
 * @author ${code.author}
 * @date ${_vm.format(${_vm.now()},"yyyy-MM-dd HH:mm:ss")}
 * @desc api page dto definition
 */
    #if(${code.lombok})
    @Data
    @NoArgsConstructor
    #end
public class ApiPage<T> {
    //从0开始，表示页索引
    private Integer index;
    //页大小
    private Integer size;
    //取数据的下标
    private Long offset;
    //总数据条数
    private Long total;
    //数据列表
    private List<T> list;

    public ApiPage(Integer index, Integer size) {
        page(index, size);
    }

    public ApiPage<T> page(Integer index, Integer size) {
        this.index = index;
        this.size = size;
        prepare();
        return this;
    }

    public ApiPage<T> prepare() {
        if (this.index != null && this.index < 0) {
            this.index = 0;
        }
        if (this.index != null && this.size < 0) {
            this.size = 20;
        }
        if (this.index != null && this.size != null) {
            long lidx = this.index;
            long lsz = this.size;
            this.offset = lidx * lsz;
        }
        return this;
    }

    public ApiPage<T> data(Long total, List<T> list) {
        this.total = total;
        this.list = list;
        return this;
    }

    public boolean valid() {
        prepare();
        return this.index != null && this.size != null;
    }

    public void beginPage() {
        if (this.index == null) {
            this.index = 0;
        }
        if (this.size == null) {
            this.size = 20;
        }
        prepare();
    }

    public ApiPage<T> data(List<T> list) {
        this.list = list;
        return this;
    }

    #if(!${code.lombok})
        public Integer getIndex() {
            return index;
        }

        public void setIndex(Integer index) {
            this.index = index;
        }

        public Integer getSize() {
            return size;
        }

        public void setSize(Integer size) {
            this.size = size;
        }

        public Long getOffset() {
            return offset;
        }

        public void setOffset(Long offset) {
            this.offset = offset;
        }

        public Long getTotal() {
            return total;
        }

        public void setTotal(Long total) {
            this.total = total;
        }

        public List<T> getList() {
            return list;
        }

        public void setList(List<T> list) {
            this.list = list;
        }
    #end
}
