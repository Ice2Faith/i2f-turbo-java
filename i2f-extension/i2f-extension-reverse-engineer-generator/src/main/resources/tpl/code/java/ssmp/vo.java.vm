#filename data/vo/${_vm.toPascal(${_vm.lower(${table.name})})}Vo
        package ${code.pkg}.data.vo;

    #if(${code.swagger})
    import io.swagger.annotations.ApiModel;
    import io.swagger.annotations.ApiModelProperty;
    #end

    #if(${code.lombok})
    import lombok.NoArgsConstructor;
    import lombok.Data;
    import lombok.EqualsAndHashCode;
    import lombok.experimental.Accessors;
    #end

import ${code.pkg}.data.dom.${_vm.toPascal(${_vm.lower(${table.name})})}Do;
import java.util.*;

/**
 * @author ${code.author}
 * @date ${_vm.format(${_vm.now()},"yyyy-MM-dd HH:mm:ss")}
 * @desc ${table.name} ${table.comment}
 */
    #if(${code.lombok})
    @Data
    @NoArgsConstructor
    @Accessors(chain = true)
    @EqualsAndHashCode(callSuper = false)
    #end
    #if(${code.swagger})
    @ApiModel(value = "${table.comment}Vo", description = "${table.name}")
    #end
public class ${_vm.toPascal(${_vm.lower(${table.name})})}Vo extends ${_vm.toPascal(${_vm.lower(${table.name})})}Do {

    #if(!${code.lombok})
        public ${_vm.toPascal(${_vm.lower(${table.name})})}Vo() {

        }
    #end

    public ${_vm.toPascal(${_vm.lower(${table.name})})}Do parent() {
        return (${_vm.toPascal(${_vm.lower(${table.name})})}Do) this;
    }

    #foreach($item in ${table.columns})
        #if(${item.javaType}=="Integer")
            /**
             *  ${item.comment} desc
             */
                #if(${code.swagger})
                @ApiModelProperty(value = "${item.comment} desc")
                #end
            protected String ${_vm.toCamel(${_vm.lower(${item.name})})}Desc;
        #end
    #end

    #if(!${code.lombok})
        #foreach($item in ${table.columns})
            #if(${item.javaType}=="Integer")
                public ${_vm.toPascal(${_vm.lower(${table.name})})}Vo set${_vm.toPascal(${item.name})}Desc(String ${_vm.toCamel(${_vm.lower(${item.name})})}Desc) {
                    this.${_vm.toCamel(${_vm.lower(${item.name})})}Desc = ${_vm.toCamel(${_vm.lower(${item.name})})}Desc;
                    return this;
                }

                public String get${_vm.toPascal(${item.name})}Desc() {
                    return this.${_vm.toCamel(${_vm.lower(${item.name})})}Desc;
                }
            #end
        #end
    #end

    #if(!${code.lombok})
        @Override
        public String toString() {
            return "${_vm.toPascal(${_vm.lower(${table.name})})}Vo{" +
                #foreach($item in ${table.columns})
                    #if(${item.javaType}=="Integer")
                            "${_vm.toCamel(${_vm.lower(${item.name})})}Desc=" + ${_vm.toCamel(${_vm.lower(${item.name})})}Desc +
                    #end
                #end
                    "super(" +
                    super.toString() +
                    ")" +
                    '}';
        }
    #end
}
