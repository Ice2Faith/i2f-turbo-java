# security \u914D\u7F6E
# \u76F8\u5173\u4ECB\u7ECD\uFF0C\u7EC4\u4EF6\u76F4\u63A5\u5728\u542F\u52A8\u7C7B\u5F15\u5165\u6CE8\u89E3 @EnableSecurityConfig \u6CE8\u89E3\u5373\u53EF
# \u5728def\u5305\u4E0B\u9762\u63D0\u4F9B\u4E86\u4E00\u4E9B\u9ED8\u8BA4\u5B9E\u73B0\uFF08\u552F\u4E00\u7528\u6237\u540D\u5BC6\u7801admin/admin,\u57FA\u4E8E\u5185\u5B58map\u7684token\u8FC7\u671F\u7B56\u7565\uFF09
# \u5B9A\u4E49\u4F60\u81EA\u5DF1\u7684\u5B9E\u73B0\u8986\u76D6def\u5305\u4E0B\u9762\u7684\u5B9E\u73B0\uFF0C\u5373\u53EF\u66FF\u6362\u529F\u80FD
# \u5E38\u89C1\u7684\u66FF\u6362\uFF1A\uFF08\u6CE8\u610F\uFF0C\u662F\u4ECE\u65B0\u5B9E\u73B0\u4F60\u81EA\u5DF1\u7684\u5B9E\u73B0\uFF0C\u800C\u4E0D\u662F\u5199\u4E00\u4E2A\u540C\u540D\u7684\u6216\u8005\u5176\u4ED6\u7684,\u6216\u8005\uFF0C\u76F4\u63A5\u7EE7\u627F\u8FD9\u4E9B\u9ED8\u8BA4\u5B9E\u73B0\uFF0C\u90E8\u5206\u4FEE\u6539\u4E4B\u540E\u52A0\u5165context\uFF09
# DefaultUserDetailsService \u7528\u4E8E\u83B7\u53D6\u6570\u636E\u5E93\u7528\u6237\u540D\u5BC6\u7801
# DefaultTokenHolder \u7528\u4E8E\u4ECEredis\u7B49\u5176\u4ED6\u9B42\u6751\u5B9E\u73B0token\u8FC7\u671F\u7B56\u7565
# \u5982\u679C\u4F60\u5F00\u542F\u4E86\u652F\u6301json-post\u65B9\u5F0F\u767B\u5F55\uFF0C\u90A3\u4E48\u4F60\u8FD8\u53EF\u4EE5\u5B9A\u4E49\u60A8\u81EA\u5DF1\u7684\u767B\u5F55\u5BC6\u7801\u89E3\u5BC6\u5668\u52A0\u5165\u73AF\u5883\u4E2D
# \u4F60\u53EA\u9700\u8981\u5B9E\u73B0\u63A5\u53E3 LoginPasswordDecoder \u5373\u53EF\uFF0C\u9ED8\u8BA4\u6CA1\u6709\u8FD9\u4E2A\u89E3\u5BC6\u5668\uFF0C\u4E0D\u5BF9\u5BC6\u7801\u505A\u4EFB\u4F55\u64CD\u4F5C
# --
# \u5EFA\u8BAE\u8FD4\u56DE\u7684UserDetails\u5B9E\u73B0\u4E3ASecurityUser\u5B9E\u73B0\u5BF9\u8C61
# \u5EFA\u8BAE\u4F7F\u7528GrantedAuthority\u7684\u5B9E\u73B0\u4E3ASecurityGrantedAuthority
# \u5728\u4F7F\u7528\u6B64\u4E8C\u8005\u65F6\uFF0C\u5728\u4F60\u63A5\u5165\u6CE8\u5165RedisCache\u66FF\u6362\u9ED8\u8BA4\u7684MemCache\u5728TokenHolder\u4E2D\u4F7F\u7528\u65F6\uFF0C\u65B9\u4FBF\u8FDB\u884C\u5E8F\u5217\u5316\u4E0E\u53CD\u5E8F\u5217\u5316
# \u5426\u5219\u4F60\u5C31\u9700\u8981\u81EA\u5DF1\u5B9E\u73B0\u53EF\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7684\u5BF9\u8C61\u5B9E\u4F8B
# \u662F\u5426\u5F00\u542Fspringsecurity\u529F\u80FD\uFF0C\u9ED8\u8BA4\u5F00\u542F
i2f.springboot.config.security.enable=true
# session \u7BA1\u7406\u6A21\u5F0F\uFF0C\u9ED8\u8BA4\u65E0\u72B6\u6001
i2f.springboot.config.security.session-creation-policy=STATELESS
# \u5FFD\u7565\u8BBF\u95EE\u540D\u5355\uFF0C\u9ED8\u8BA4\u65E0
i2f.springboot.config.security.ignore-list=/actuator/**,/swagger*/**,/*/api*,/api2/**,/webjars*,/druid/**
# \u533F\u540D\u8BBF\u95EE\u540D\u5355\uFF0C\u9ED8\u8BA4\u65E0
i2f.springboot.config.security.anonymous-list=/actuator/**
# \u5B8C\u5168\u5F00\u653E\u8BBF\u95EE\u540D\u5355\uFF0C\u9ED8\u8BA4\u65E0
i2f.springboot.config.security.permit-all-list=/**/*.html
# \u5B8C\u5168\u5F00\u653E\u4EC5GET\u65B9\u5F0F\u8BBF\u95EE\u7684\u8D44\u6E90\uFF0C\u9ED8\u8BA4\u9875\u9762\u6587\u4EF6
i2f.springboot.config.security.static-resource-list=/**/*.html,/**/*.css,/**/*.js,/**/*.png,/**/*.jpg,/**/*.jpeg
# \u662F\u5426\u5F00\u542Fcsrf,\u9ED8\u8BA4\u5173\u95ED
i2f.springboot.config.security.csrf.enable=true
# \u662F\u5426\u5F00\u542Fcors,\u9ED8\u8BA4\u5F00\u542F
i2f.springboot.config.security.cors.enable=true
# \u662F\u5426\u5F00\u542F\u8868\u5355\u767B\u5F55\uFF0C\u9ED8\u8BA4\u5F00\u542F
i2f.springboot.config.security.form-login.enable=true
# \u662F\u5426\u5F00\u542Fhttp-basic,\u9ED8\u8BA4\u5173\u95ED
i2f.springboot.config.security.http-basic.enable=true
# \u662F\u5426\u5F00\u542F\u65E0\u6743\u9650403\u54CD\u5E94\u8FD4\u56DE\uFF0C\u9ED8\u8BA4\u5F00\u542F
i2f.springboot.config.security.enable-exception-handler=true
# \u662F\u5426\u652F\u6301json-post\u65B9\u5F0F\u767B\u5F55\uFF0C\u9ED8\u8BA4\u652F\u6301
i2f.springboot.config.security.login-json.enable=true
# \u767B\u5F55\u8BF7\u6C42\u7684path,\u9ED8\u8BA4/login
i2f.springboot.config.security.login-url=/login
# \u767B\u5F55\u8BF7\u6C42\u7684\u7528\u6237\u540D\u5C5E\u6027\u540D\uFF0C\u9ED8\u8BA4username
i2f.springboot.config.security.login-username=username
# \u767B\u5F55\u8BF7\u6C42\u7684\u7528\u6237\u5BC6\u7801\u5C5E\u6027\u540D\uFF0C\u9ED8\u8BA4password
i2f.springboot.config.security.login-password=password
# \u662F\u5426\u5F00\u542F\u5355\u70B9\u767B\u5F55\uFF0C\u5728\u9ED8\u8BA4\u5B9E\u73B0\u4E2D\u751F\u6548\uFF0C\u9ED8\u8BA4\u5F00\u542F\u5355\u70B9\u767B\u5F55
i2f.springboot.config.security.login-single.enable=true
# \u9ED8\u8BA4\u7684\u5B9E\u73B0\u4E2D\u7684\u7528\u6237\u540D\u5BC6\u7801\u914D\u7F6E,\u53EF\u4EE5\u914D\u7F6E\u591A\u4E2A\uFF0C\u6BCF\u4E00\u4E2A\u7528\u5206\u53F7\u5206\u9694
# \u4E00\u4E2A\u5B8C\u6574\u7528\u6237\u914D\u7F6E\u5982\u4E0B
# {username}/{password}={authoritys}
# \u5176\u4E2Dauthoritys\u53EF\u4EE5\u6709\u591A\u4E2A
# {role},{permission},{permission}
# \u4E3E\u4F8B\uFF1Aadmin/admin=ROLE_admin,sys:config:manage
# \u8868\u793A\uFF1A\u7528\u6237admin\uFF0C\u5BC6\u7801admin,\u5177\u6709\u89D2\u8272ROLE_admin,\u5177\u6709\u6743\u9650sys:config:manage
# authoritys\u53EF\u4EE5\u4E3A\u7A7A\uFF0C\u5982\u4E0B
i2f.springboot.config.security.default-impl-login.users=admin/admin=ROLE_admin,sys:config:manage;user/123456
# ############################################################################################
# \u6743\u9650\u63A7\u5236
# \u8FD9\u91CC\u4E3B\u8981\u662Fspring-security\u9ED8\u8BA4\u7684\u65B9\u5F0F\u548C\u652F\u6301js250\u89C4\u8303\u7684\u65B9\u5F0F
# \u9700\u8981\u5F00\u59CB\u6CE8\u89E3\u652F\u6301\uFF0C\u672C\u6A21\u5757\u4E2D\u9ED8\u8BA4\u5F00\u542F\u4E86
# @EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true,jsr250Enabled = true)
# securedEnabled = true \u662F\u5F00\u542F\u65B9\u6CD5\u6CE8\u89E3\u6743\u9650\u5224\u65AD
# prePostEnabled = true \u662F\u5F00\u542F\u652F\u6301spring-security\u65B9\u5F0F
# jsr250Enabled = true \u662F\u5F00\u542F\u652F\u6301js250\u65B9\u5F0F
# ############################################################################################
# spring-security \u7684\u65B9\u5F0F
# \u901A\u8FC7 @PreAuthorize \u6CE8\u89E3\u5B9E\u73B0
# \u6CE8\u89E3\u9ED8\u8BA4\u652F\u6301\u7684\u65B9\u6CD5\u6709 hasAuthority\u3001hasAnyAuthority\u3001hasRole\u3001hasAnyRole
# \u8FD9\u4E9B\u65B9\u6CD5\u90FD\u53EF\u4EE5\u5728 org.springframework.security.access.expression.SecurityExpressionRoot \u4E2D\u8FDB\u884C\u6E90\u7801\u67E5\u770B
# \u7ECF\u8FC7\u6E90\u7801\u67E5\u770B\u4E4B\u540E
# \u9996\u5148\uFF0C\u641E\u6E05\u695A\u4E00\u70B9\uFF0C\u6743\u9650\u662F\u5728\u54EA\u91CC\u8BBE\u7F6E\u7ED9spring-security\u7684
# \u662F\u5728\u767B\u5F55\u65F6\uFF0C\u4E5F\u5C31\u662F\u6211\u4EEC\u5B9E\u73B0\u4E86\u81EA\u5DF1\u7684\u767B\u5F55\u5BF9\u8C61\u670D\u52A1
# org.springframework.security.core.userdetails.UserDetailsService
# \u6211\u4EEC\u8FD4\u56DE\u4E86\u4E00\u4E2A\u767B\u5F55\u7528\u6237\u7EC6\u8282\u5BF9\u8C61
# org.springframework.security.core.userdetails.UserDetails
# \u8FD9\u4E2A\u5BF9\u8C61\u4E2D\uFF0C\u5C31\u5305\u542B\u4E86 Collection<? extends GrantedAuthority> getAuthorities(); \u65B9\u6CD5
# \u8FD9\u4E2A\u65B9\u6CD5\u5C31\u662F\u6388\u6743\u7684\u6743\u9650\u96C6\u5408\uFF0C\u96C6\u5408\u7684\u5BF9\u8C61\u662F org.springframework.security.core.GrantedAuthority
# \u4ED6\u63D0\u4F9B\u4E86\u4E00\u4E2A\u63A5\u53E3\uFF0C\u7528\u4E8E\u83B7\u53D6\u6743\u9650\u63CF\u8FF0\u5B57\u7B26\u4E32 String getAuthority();
# hasAuthority\u3001hasAnyAuthority \u662F\u76F4\u63A5\u6BD4\u8F83\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u662F\u5426\u5728 UserDetails.getAuthorities() \u4E2D\u5B58\u5728
# hasRole\u3001hasAnyRole \u5219\u4F1A\u5224\u65AD\u56FA\u5B9A\u524D\u7F00ROLE_+\u7ED9\u5B9A\u5B57\u7B26\u4E32\u662F\u5426\u5728  UserDetails.getAuthorities() \u4E2D\u5B58\u5728
# \u4E3E\u4E2A\u4F8B\u5B50
# UserDetails.getAuthorities() \u4E2D\u6211\u4EEC\u7ED9\u5B9A\u4E86\u4E00\u4E0B\u7684\u503C
# ROLE_admin,ROLE_root,home:view,/home/index
# \u5219\u5224\u65AD\u6CE8\u89E3\u53EF\u4EE5\u8FD9\u6837\u5199
# \u9700\u8981admin\u89D2\u8272
# @PreAuthorize("hasRole('admin')")
# \u9700\u8981\u5177\u6709\u6743\u9650
# @PreAuthorize("hasAuthority('home:view')")
# @PreAuthorize("hasAuthority('/home/index')")
# \u5F53\u5177\u6709\u591A\u4E2A\u6761\u4EF6\u65F6\uFF0C\u6EE1\u8DB3SPEL\u8868\u8FBE\u5F0F\u8BED\u6CD5\u5373\u53EF
# @PreAuthorize("hasAuthority('home:view') && hasAnyRole('admin','root')")
# @PreAuthorize("hasAuthority('home:view') and hasAnyRole('admin','root')")
# \u5F53\u7136\uFF0C\u7531\u4E8E\u662FSPEL\u8BED\u6CD5\uFF0C\u6240\u4EE5\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u5B9A\u4E49\u81EA\u5DF1\u7684\u65B9\u6CD5
# \u52A0\u5165\u5B9A\u4E49\u4E00\u4E2Abean\u53EB\u505Ass(beanName)\uFF0C\u6709\u4E00\u4E2A\u9A8C\u8BC1\u65B9\u6CD5\u53EB\u505Aboolean hasMenu(String str)
# \u5176\u4E2D\u7684\u65B9\u6CD5\u8C03\u7528\u5373\u53EF
# @PreAuthorize("ss.hasMenu('/home/index')")
# ############################################################################################
# js250 \u7684\u65B9\u5F0F
# \u540C\u65F6\uFF0C\u4E5F\u652F\u6301JS250\u7684\u8BBF\u95EE\u63A7\u5236\u89C4\u8303
# \u6E90\u7801\u5728\u8FD9\u4E2A\u7C7B\u4E2D\u5B9E\u73B0
# org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource
# \u53EF\u4EE5\u4F7F\u7528\u7684\u6CE8\u89E3\u6709
# @Secured @RolesAllowed
# \u533A\u522B\u662F Secured \u4E0D\u5224\u65AD\u6709\u6CA1\u6709ROLE_\u524D\u7F00\uFF0CRolesAllowed\u5224\u65ADROLE_\u524D\u7F00
# \u4E5F\u5C31\u662F\u8BF4\uFF0CSecured\u7B49\u4EF7\u4E8EhasAuthority\uFF0CRolesAllowed\u7B49\u4EF7\u4E8EhasRole