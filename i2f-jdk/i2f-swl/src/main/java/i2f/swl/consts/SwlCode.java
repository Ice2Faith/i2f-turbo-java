package i2f.swl.consts;

/**
 * @author Ice2Faith
 * @date 2024/7/10 9:48
 * @desc
 */
public enum SwlCode {

    ASYMMETRIC_EXCEPTION(1000),
    ASYMMETRIC_ENCRYPT_EXCEPTION(1100),
    ASYMMETRIC_DECRYPT_EXCEPTION(1200),
    ASYMMETRIC_SIGN_EXCEPTION(1300),
    ASYMMETRIC_VERIFY_EXCEPTION(1400),
    ASYMMETRIC_INVALID_KEY_EXCEPTION(1500),
    ASYMMETRIC_INVALID_PUBLIC_KEY_EXCEPTION(1501),
    ASYMMETRIC_INVALID_PRIVATE_KEY_EXCEPTION(1502),

    SYMMETRIC_EXCEPTION(2000),
    SYMMETRIC_ENCRYPT_EXCEPTION(2100),
    SYMMETRIC_DECRYPT_EXCEPTION(2200),
    SYMMETRIC_INVALID_KEY_EXCEPTION(2300),

    DIGEST_EXCEPTION(3000),
    DIGEST_SIGN_EXCEPTION(3100),
    DIGEST_VERIFY_EXCEPTION(3200),

    NONCE_EXCEPTION(4000),
    NONCE_MISSING_EXCEPTION(4100),
    NONCE_INVALID_EXCEPTION(4200),
    NONCE_TIMESTAMP_EXCEED_EXCEPTION(4300),
    NONCE_ALREADY_EXISTS_EXCEPTION(4400),

    SIGN_EXCEPTION(5000),
    SIGN_MISSING_EXCEPTION(5100),
    SIGN_VERIFY_FAILURE_EXCEPTION(5200),

    RANDOM_KEY_EXCEPTION(6000),
    RANDOM_KEY_MISSING_EXCEPTION(6100),
    RANDOM_KEY_INVALID_EXCEPTION(6200),

    CLIENT_ASYM_KEY_EXCEPTION(7000),
    CLIENT_ASYM_KEY_SIGN_MISSING_EXCEPTION(7100),
    CLIENT_ASYM_KEY_NOT_FOUND_EXCEPTION(7200),


    SERVER_ASYM_KEY_EXCEPTION(8000),
    SERVER_ASYM_KEY_SIGN_MISSING_EXCEPTION(8100),
    SERVER_ASYM_KEY_NOT_FOUND_EXCEPTION(8200),

    DIGITAL_EXCEPTION(9000),
    DIGITAL_MISSING_EXCEPTION(9100),
    DIGITAL_VERIFY_FAILURE_EXCEPTION(9100),

    ;

    private int code;

    SwlCode(int code) {
        this.code = code;
    }

    public int code() {
        return code;
    }
}
